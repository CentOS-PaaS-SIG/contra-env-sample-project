env.CI_MESSAGE = '{"pullrequest":{"status":"Open","last_updated":"1531213549","branch_from":"tests","uid":"9df5133a51e348ae9a7d5b0f3f371567","commit_stop":"d35a0b2b165ffe45657c3478523a6840bc9ac828","initial_comment":"justification\\r\\nAdds tests according to the CI wiki specifically the standard test interface in the spec.\\r\\nThe playbook includes Tier1 level test cases that have been tested in the following contexts and\\r\\nis passing reliably: Classic. Test logs are stored in the artifacts directory.\\r\\nThe following steps are used to execute the tests using the standard test interface:\\r\\n\\r\\nTest enveronment\\r\\nMake sure you have installed packages from the spec\\r\\n```\\r\\nansible-2.4.1.0-2.fc28.noarch\\r\\npython2-dnf-2.7.5-1.fc28.noarch\\r\\nlibselinux-python-2.7-2.fc28.x86_64\\r\\nstandard-test-roles-2.5-1.fc28.noarch\\r\\n```\\r\\nRun tests for Classic\\r\\nSnip of the example test run for Classic tests:\\r\\n\\r\\n```\\r\\nbridge-utils-1.6-1.fc28.x86_64\\r\\n:: [ 14:32:30 ] :: [   PASS   ] :: Checking for the presence of bridge-utils rpm\\r\\n:: [ 14:32:30 ] :: [   PASS   ] :: Checking for the presence of bridge-utils rpm\\r\\n:: [ 14:32:30 ] :: [   LOG    ] :: Package versions:\\r\\n:: [ 14:32:30 ] :: [   LOG    ] :: Package versions:\\r\\n:: [ 14:32:30 ] :: [   LOG    ] ::   bridge-utils-1.6-1.fc28.x86_64\\r\\n:: [ 14:32:30 ] :: [   LOG    ] ::   bridge-utils-1.6-1.fc28.x86_64\\r\\n:: [ 14:32:30 ] :: [  BEGIN   ] :: Running \'cp bridge-utils-tests.py /usr/bin\'\\r\\n:: [ 14:32:30 ] :: [   PASS   ] :: Command \'cp bridge-utils-tests.py /usr/bin\' (Expected 0, got 0)\\r\\n:: [ 14:32:30 ] :: [   PASS   ] :: Command \'cp bridge-utils-tests.py /usr/bin\' (Expected 0, got 0)\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n::   Duration: 1s\\r\\n::   Duration: 1s\\r\\n::   Assertions: 2 good, 0 bad\\r\\n::   Assertions: 2 good, 0 bad\\r\\n::   RESULT: PASS\\r\\n::   RESULT: PASS\\r\\n\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n::   Test\\r\\n::   Test\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n\\r\\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\\r\\n\\r\\n:: [ 14:32:30 ] :: [   LOG    ] :: bridge-utils tests\\r\\n:: [ 14:32:30 ] :: [   LOG    ] :: bridge-utils tests\\r\\n:: [ 14:32:30 ] :: [  BEGIN   ] :: Running \'/usr/bin/python3 /usr/bin/bridge-utils-tests.py\'\\r\\ntest_add_bridge (__main__.IPLinkSetDevTests) ... ok\\r\\ntest_add_slave (__main__.IPLinkSetDevTests) ... ok\\r\\n\\r\\n----------------------------------------------------------------------\\r\\nRan 2 tests in 0.115s\\r\\n\\r\\nOK\\r\\n```","title":"Adds tests according to the CI","comments":[],"id":1,"project":{"custom_keys":[],"description":"The bridge-utils rpms","parent":null,"date_modified":"1501866498","access_users":{"admin":[],"commit":["twoerner"],"ticket":[],"owner":["dwmw2"]},"namespace":"rpms","url_path":"rpms/bridge-utils","priorities":{},"id":1407,"access_groups":{"admin":[],"commit":[],"ticket":[]},"milestones":{},"user":{"fullname":"dwmw2","name":"dwmw2"},"date_created":"1501866498","fullname":"rpms/bridge-utils","settings":{"issues_default_to_private":false,"Minimum_score_to_merge_pull-request":-1,"pull_request_access_only":false,"stomp_notifications":true,"Web-hooks":null,"fedmsg_notifications":true,"always_merge":false,"project_documentation":false,"Enforce_signed-off_commits_in_pull-request":false,"notify_on_commit_flag":false,"notify_on_pull-request_flag":false,"roadmap_on_issues_page":false,"pull_requests":true,"Only_assignee_can_merge_pull-request":false,"issue_tracker":true},"close_status":[],"tags":[],"name":"bridge-utils"},"assignee":null,"repo_from":{"custom_keys":[],"description":"The bridge-utils rpms","parent":{"custom_keys":[],"description":"The bridge-utils rpms","parent":null,"date_modified":"1501866498","access_users":{"admin":[],"commit":["twoerner"],"ticket":[],"owner":["dwmw2"]},"namespace":"rpms","url_path":"rpms/bridge-utils","priorities":{},"id":1407,"access_groups":{"admin":[],"commit":[],"ticket":[]},"milestones":{},"user":{"fullname":"dwmw2","name":"dwmw2"},"date_created":"1501866498","fullname":"rpms/bridge-utils","settings":{"issues_default_to_private":false,"Minimum_score_to_merge_pull-request":-1,"pull_request_access_only":false,"stomp_notifications":true,"Web-hooks":null,"fedmsg_notifications":true,"always_merge":false,"project_documentation":false,"Enforce_signed-off_commits_in_pull-request":false,"notify_on_commit_flag":false,"notify_on_pull-request_flag":false,"roadmap_on_issues_page":false,"pull_requests":true,"Only_assignee_can_merge_pull-request":false,"issue_tracker":true},"close_status":[],"tags":[],"name":"bridge-utils"},"date_modified":"1531141462","access_users":{"admin":[],"commit":[],"ticket":[],"owner":["ssahani"]},"namespace":"rpms","url_path":"fork/ssahani/rpms/bridge-utils","priorities":{},"id":31342,"access_groups":{"admin":[],"commit":[],"ticket":[]},"milestones":{},"user":{"fullname":"Susant Sahani","name":"ssahani"},"date_created":"1531141462","fullname":"forks/ssahani/rpms/bridge-utils","settings":{"issues_default_to_private":false,"Minimum_score_to_merge_pull-request":-1,"pull_request_access_only":false,"stomp_notifications":true,"Web-hooks":null,"fedmsg_notifications":true,"always_merge":false,"project_documentation":false,"Enforce_signed-off_commits_in_pull-request":false,"notify_on_commit_flag":false,"notify_on_pull-request_flag":false,"roadmap_on_issues_page":false,"pull_requests":false,"Only_assignee_can_merge_pull-request":false,"issue_tracker":false},"close_status":[],"tags":[],"name":"bridge-utils"},"cached_merge_status":"unknown","updated_on":"1531213549","commit_start":"d35a0b2b165ffe45657c3478523a6840bc9ac828","branch":"master","date_created":"1531213549","closed_at":null,"remote_git":null,"closed_by":null,"user":{"fullname":"Susant Sahani","name":"ssahani"}},"agent":"ssahani","topic":"org.fedoraproject.prod.pagure.pull-request.new"}'

def libraries = ['contra-lib': ['master', 'https://github.com/openshift/contra-lib.git']]

libraries.each { name, repo ->
    library identifier: "${name}@${repo[0]}",
            retriever: modernSCM([$class: 'GitSCMSource',
                                  remote: repo[1]])

}

properties(
        [
                buildDiscarder(logRotator(artifactDaysToKeepStr: '30', artifactNumToKeepStr: '', daysToKeepStr: '90', numToKeepStr: '')),
                disableConcurrentBuilds(),
                parameters(
                        [
                                string(defaultValue: "${env.ghprbActualCommit}", description: '', name: 'ghprbActualCommit'),
                                string(defaultValue: "${env.ghprbGhRepository}", description: '', name: 'ghprbGhRepository'),
                                string(defaultValue: '', description: '', name: 'ghprbPullId'),
                                string(defaultValue: '', description: '', name: 'ghprbPullAuthorLogin'),
                                string(defaultValue: "${env.OPENSHIFT_NAMESPACE}", description: 'Project namespace for Openshift operations', name: 'OPENSHIFT_NAMESPACE'),
                                string(defaultValue: "${env.DOCKER_REPO_URL}", description: 'The internal docker registry url', name: 'DOCKER_REPO_URL'),
                                string(defaultValue: 'stable', description: 'The rpmbuild image tag', name: 'RPMBUILD_TAG'),
                                string(defaultValue: 'stable', description: 'The cloud-image-compose image tag', name: 'CLOUD_IMAGE_COMPOSE_TAG'),
                                string(defaultValue: 'stable', description: 'The singlehost-test image tag', name: 'SINGLEHOST_TEST_TAG')


                        ]
                ),
        ]
)

containers = [
        'rpmbuild':
        [
                tag: env.RPMBUILD_TAG
        ],
        'cloud-image-compose':
        [
                tag: env.CLOUD_IMAGE_COMPOSE_TAG
        ],
        'singlehost-test':
        [
                tag: env.SINGLEHOST_TEST_TAG
        ]
]
podName = "contra-sample-pipeline-${UUID.randomUUID().toString()}"
env.DOCKER_REPO_URL = env.DOCKER_REPO_URL ?: '172.30.1.1:5000'
env.OPENSHIFT_NAMESPACE = env.OPENSHIFT_NAMESPACE ?: 'contra-sample-project'
prMessage = prMessage(env.CI_MESSAGE)

msgHeader = fedMsgHeader(repo: prMessage['repo'], namespace: 'contra-env-sample', username: prMessage['username'])
msgComplete = fedMsgComplete(header: msgHeader)
msgError = fedMsgError(header: msgHeader)

deployOpenShiftTemplate(podName: podName, containersWithProps: containers, docker_repo_url: DOCKER_REPO_URL,
                        openshift_namespace: OPENSHIFT_NAMESPACE) {

    ciPipeline(package_name: prMessage['repo'], buildPrefix: 'contra-env-sample', sendMetrics: false,
               completeMsg: msgComplete, errorMsg: msgError) {

        stage('rpm-build') {
            rpmBuildPR(repo: prMessage['repo'], id: prMessage['id'], uid: prMessage['uid'])
        }

        stage('repo-query') {
            repoQuery(repo: prMessage['repo'])
        }

        stage('image-compose') {
            imageCompose(package: prMessage['repo'], branch: prMessage['branch'], release: prMessage['release'])
        }

        stage('package-tests') {
            packageTests(package: prMessage['repo'], branch: prMessage['branch'])
        }

    }
}
